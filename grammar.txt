program ::=   <command> | <command> <program>

command ::=   <aeVariableDeclaration> ";"
          |   <beVariableDeclaration> ";"
          |   <arVariableDeclaration> ";"
          |   <aeAssignment> ";"
          |   <beAssignment> ";"
          |   <arAssignment> ";"
          |   <assignment> ";"
          |   <ifThenElse> ";"
          |   <while> ";"
          |   <skip> ";"

aeVariableDeclaration ::=   "int" <identifier> "=" <aexp> ";"
beVariableDeclaration ::=   "bool" <identifier> "=" <bexp> ";"
arVariableDeclaration ::=   "array" <identifier> "=" <aexp> ";"
aeAssignment ::=    <identifier> "=" <aexp> ";"
beAssignment ::=    <identifier> "=" <bexp> ";"
arAssignment ::=    <identifier> "[ <aexp> "]" "=" <aexp>

ifThenElse ::=    "if" "("<bexp>")" "{" <program> "}"
            |     "if" "("<bexp>")" "{" <program>"}" "else" "{" <program> "}"

while ::=      "while" "("<bexp>")" "{" <program> "}"

skip ::=   "skip"

aexp ::=    <aterm> [{"+"|"-"} <aterm>]*

aterm ::=   <afact> ["*" <afact>]*

afact ::= <positiveterm> | <negativeterm> | "(" <aexp> ")"
        | <identifier> "[" <aexp> "]"

negativeterm ::=    "-" <positiveterm>

positiveterm ::=    <naturalnumber> | <identifier>

bexp ::=        <bterm> ["or" <bterm>]*

bterm ::=       <bfact> ["and" <bfact>]*

bfact ::=       <truthvalue> | "not" <bexp> | "(" <bexp> ")" | <comparison>
            |   <identifier>

comparison ::=  <aexp> <operator> <aexp>

truthvalue ::=    "True" | "False"

operator ::=    "<" | ">" | "==" | "<=" | ">=" | "!="

naturalnumber ::=   <digit> | <digit> <integer>

digit ::=     [0-9]*
identifier ::=    [a-zA-Z_][a-zA-Z_0-9]*